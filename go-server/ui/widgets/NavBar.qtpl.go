// Code generated by qtc from "NavBar.qtpl". DO NOT EDIT.
// See https://github.com/valyala/quicktemplate for details.

//line widgets/NavBar.qtpl:2
package widgets

//line widgets/NavBar.qtpl:2
import . "../types"

//line widgets/NavBar.qtpl:4
import (
	qtio422016 "io"

	qt422016 "github.com/valyala/quicktemplate"
)

//line widgets/NavBar.qtpl:4
var (
	_ = qtio422016.Copy
	_ = qt422016.AcquireByteBuffer
)

//line widgets/NavBar.qtpl:4
func StreamNavBar(qw422016 *qt422016.Writer, opt *WidgetInfo) {
//line widgets/NavBar.qtpl:4
	qw422016.N().S(`

<nav class="navbar navbar-expand-md navbar-dark bg-dark mb-4">
      <a class="navbar-brand" href="#">`)
//line widgets/NavBar.qtpl:7
	qw422016.E().S(opt.Header)
//line widgets/NavBar.qtpl:7
	qw422016.N().S(`</a>
      <button class="navbar-toggler" type="button" data-toggle="collapse" data-target="#navbarCollapse" aria-controls="navbarCollapse" aria-expanded="false" aria-label="Toggle navigation">
        <span class="navbar-toggler-icon"></span>
      </button>
      <div class="collapse navbar-collapse" id="navbarCollapse">
        <ul class="navbar-nav mr-auto">
`)
//line widgets/NavBar.qtpl:13
	for _, link := range opt.Links {
//line widgets/NavBar.qtpl:13
		qw422016.N().S(`
          <li class="nav-item active">
            <a class="nav-link `)
//line widgets/NavBar.qtpl:15
		if link.Disabled {
//line widgets/NavBar.qtpl:15
			qw422016.N().S(`disabled`)
//line widgets/NavBar.qtpl:15
		}
//line widgets/NavBar.qtpl:15
		qw422016.N().S(`" href="`)
//line widgets/NavBar.qtpl:15
		qw422016.E().S(link.Href)
//line widgets/NavBar.qtpl:15
		qw422016.N().S(`">`)
//line widgets/NavBar.qtpl:15
		qw422016.E().S(link.Value)
//line widgets/NavBar.qtpl:15
		qw422016.N().S(`
               <span class="badge badge-pill bg-light align-text-bottom">`)
//line widgets/NavBar.qtpl:16
		qw422016.E().S(link.Badge)
//line widgets/NavBar.qtpl:16
		qw422016.N().S(`</span>
            </a>
          </li>
`)
//line widgets/NavBar.qtpl:19
	}
//line widgets/NavBar.qtpl:19
	qw422016.N().S(`
        </ul>

`)
//line widgets/NavBar.qtpl:22
	if opt.ShowSearch {
//line widgets/NavBar.qtpl:22
		qw422016.N().S(`
        <form class="form-inline mt-2 mt-md-0">
          <input class="form-control mr-sm-2" type="text" placeholder="`)
//line widgets/NavBar.qtpl:24
		qw422016.E().S(opt.Placeholder)
//line widgets/NavBar.qtpl:24
		qw422016.N().S(`" aria-label="Search">
          <button class="btn btn-outline-success my-2 my-sm-0" type="submit">Search</button>
        </form>
`)
//line widgets/NavBar.qtpl:27
	}
//line widgets/NavBar.qtpl:27
	qw422016.N().S(`

      </div>
</nav>
`)
//line widgets/NavBar.qtpl:31
}

//line widgets/NavBar.qtpl:31
func WriteNavBar(qq422016 qtio422016.Writer, opt *WidgetInfo) {
//line widgets/NavBar.qtpl:31
	qw422016 := qt422016.AcquireWriter(qq422016)
//line widgets/NavBar.qtpl:31
	StreamNavBar(qw422016, opt)
//line widgets/NavBar.qtpl:31
	qt422016.ReleaseWriter(qw422016)
//line widgets/NavBar.qtpl:31
}

//line widgets/NavBar.qtpl:31
func NavBar(opt *WidgetInfo) string {
//line widgets/NavBar.qtpl:31
	qb422016 := qt422016.AcquireByteBuffer()
//line widgets/NavBar.qtpl:31
	WriteNavBar(qb422016, opt)
//line widgets/NavBar.qtpl:31
	qs422016 := string(qb422016.B)
//line widgets/NavBar.qtpl:31
	qt422016.ReleaseByteBuffer(qb422016)
//line widgets/NavBar.qtpl:31
	return qs422016
//line widgets/NavBar.qtpl:31
}
